# .env

PORT=5000
URL=the full url of the poyoweb, including `https://`. ex: https://poyoweb.me
SUFFIX=url suffix, the host header of the poyoweb. ex: poyoweb.me
TOKEN_KEY=token used for JWT signing. Make it a super long string with lotsa characters. ex: PoyoWebRocks2024abcdefg%psiql@Wko482
EMAIL_USERNAME=bot gmail address used for sending emails to users. ex: poyowebbot@gmail.com
EMAIL_PASSWORD=app password from your bot gmail
EMAIL_ACTUAL_PASSWORD=not needed for the PoyoWeb, just here so I dont forget my email's password :P
CLOUDFLARE_SITE_KEY=cloudflare site key for turnstile
CLOUDFLARE_SECRET_KEY=cloudflare sectret key for turnstile

# NPM Setup

First, install NPM. Then run `NPM i` and finally install Nodemon `npm i -g nodemon`. When running the PoyoWeb, do `node .` in the PoyoWeb's `index.js` directory. For development purposes, run `nodemon .` in the same directory as the PoyoWeb's `index.js`.

# Nginx Setup

For nginx you gotta copy the files from /nginx to wherever your nginx stuff is
```sudo cp nginx/maintenance.html /usr/share/nginx/html/```

# How it works

The PoyoWeb is a node.js app.
It is divided in many files:

- `index.js`: Groups all the files and provides routing for them. Also used to display the TOS, Privacy Policy and credits. It also loads the middleware.
- `auth.js`: Handles all of the PoyoWeb's auth, including registration and user sessions. 
- `domains.js`: Handles the domain routing. If the host header doesnt match the PoyoWeb's header, it reroutes to X user's website. If X user's website doesn't exist, it returns an error.
- `verifyJwt.js`: Verifies any JWT. Used in the middleware.
- `fixdomains.js`: Updates the websites table with updated domains from the .env, intended for when domains get switched. `node fixdomains.js olddomain.com`
